#
msgid ""
msgstr ""
"Project-Id-Version: Radar 0.0.1b\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-09-11 17:19-0300\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../checks-development.rst:2
msgid "Checks development"
msgstr "Desarrollo de chequeos"

#: ../../checks-development.rst:4
msgid ""
"In this section we will explain how checks should be developed and how Radar"
" runs them. As stated before checks can be programmed in your favourite "
"language."
msgstr ""
"En esta sección explicaremos como se deben desarrollar los chequeos y como "
"Radar los ejecuta. Como ha sido mencionado anteriormente, los chequeos "
"pueden escribirse en tu lenguaje de programación favorito."

#: ../../checks-development.rst:10
msgid "Introduction"
msgstr "Introducción"

#: ../../checks-development.rst:12
msgid ""
"Checks are the way Radar monitors any given resource. Radar only cares how "
"you return the output of your checks, it will expect a valid `JSON "
"<https://en.wikipedia.org/wiki/JSON>`_ containing one or more of the "
"following fields :"
msgstr ""
"La forma en que Radar monitorea cualquier recurso es a través de chequeos. "
"Radar solo se preocupa por el string que devuelve un chequeo a la salida "
"estándar. Radar espera que devuelvas un `JSON "
"<https://en.wikipedia.org/wiki/JSON>`_ que contenga uno o más de los "
"siguientes campos :"

#: ../../checks-development.rst:16
msgid ""
"status : This field is mandatory. It must be equal to any of the following "
"string values : OK, WARNING, SEVERE or ERROR."
msgstr ""
"status : Este campo es obligatorio. Debe ser igual a alguno de los "
"siguientes strings : OK, WARNING, SEVERE o ERROR. "

#: ../../checks-development.rst:19
msgid ""
"details : This is an optional field. You can add details about how your "
"check performed. Radar expects this value to be a string."
msgstr ""
"details : Este es un campo opcional. Puedes añadir información detallada "
"acerca de tu chequeo. Radar espera que este campo sea un string. "

#: ../../checks-development.rst:22
msgid ""
"data : This is an optional field. You can put here any data related to your "
"check. Radar does not expect any particular format for this field."
msgstr ""
"data : Este es un campo opcional. Puedes agregar aquí cualquier conjunto de "
"datos relacionado con tu chequeo. Radar no espera que cumplas con un formato"
" particular."

#: ../../checks-development.rst:25
msgid ""
"So, let's assume you have an uptime check. So the minimum output for this "
"check would be the following JSON :"
msgstr ""
"Asumamos que tienes un chequeo que te devuelve la cantidad de tiempo que tu "
"sistema ha estado encendido. La mínima salida que este chequeo debe devolver"
" es el siguiente JSON :"

#: ../../checks-development.rst:32
msgid ""
"Radar is case insensitive when it reads a check's output so it does not care"
" how you name the fields (as long as you include them Radar won't complain),"
" so this JSON is also valid :"
msgstr ""
"Radar no hace distinción de mayúsculas o minúsculas al leer la salida "
"estandar de un chequeo, puedes nombrar los campos como desees (siempre y "
"cuando tengan el mismo nombre que los mencionados más arriba). En ese caso "
"este JSON también es válido :"

#: ../../checks-development.rst:40
msgid ""
"Any other combination of upper and lower characters is also valid. Now "
"suppose you want to be more verbose on this check, then you might want to "
"add some details :"
msgstr ""
"Cualquier otra combinación de mayúsculas y minúsculas también será válida. "
"Ahora supone que quieres ser un poco más detallado, podrías entonces agregar"
" más información en el campo details : "

#: ../../checks-development.rst:51
msgid ""
"Details will be stored (along with status and data) in their respective "
"checks on the server side, and all your plugins will have visibility on "
"these fields. Now, let's assume that your check also returns data to be "
"processed by any of the plugins on the server side, so your JSON might look "
"something like this :"
msgstr ""
"El campo details (en realidad todos los campos utilizados) serán almacenados"
" en el lado del servidor y todos tus plugins que hayas definido tendrán "
"total visibilidad sobre estos campos. Ahora también supongamos que deseas "
"incluir datos para que los mismos sean procesados por algún plugin del lado "
"del servidor :"

#: ../../checks-development.rst:68
msgid ""
"As mentioned before, there is no specific format that you have to comply on "
"the data field, is completely up to you how to lay it out. You can include "
"as much data as you want and in any desired way."
msgstr ""
"Como hemos comentado previamente, no hay un formato específico que debas "
"cumplir sobre el campo data, puedes organizarlo completamente a tu manera. "
"Puedes incluir tantos datos como desees y organizarlos de cualquier forma."

#: ../../checks-development.rst:74
msgid "Guidelines"
msgstr "Consejos"

#: ../../checks-development.rst:76
msgid ""
"Currently Radar checks are executed sequentially, that is one after the "
"other (this is expected to change on a future release), so some care must be"
" taken when developing them. Here are some tips and advices on how to write "
"good checks :"
msgstr ""
"Actualmente Radar ejecuta todos sus chequeos de manera secuencial, esto es "
"uno detrás de otro (esto cambiará en algún release futuro), así que debes "
"tener un poco de cuidado al desarrollarlos. Aquí te damos algunos consejos "
"de como escribir chequeos :"

#: ../../checks-development.rst:81
msgid ""
"The order of the checks execution is irrelevant. That means that check Y "
"must not depend on previous execution of check X."
msgstr ""
"El orden de ejecución de los chequeos es irrelevante. Esto significa que un "
"chequeo Y no debe depender de la ejecución anterior de un chequeo X. "

#: ../../checks-development.rst:84
msgid ""
"Checks should check one and only one resource. If you're checking the load "
"average, then just check that and not other things like free memory or disk "
"usage. For those write 2 other checks."
msgstr ""
"Los chequeos deben analizar un y solo un recurso. Si estas verificando la "
"carga promedio de tu sistema, entonces solo verifica ese recurso y no otros "
"como por ejemplo memoria disponible o utilización de disco. Para estos dos "
"últimos escribe otros dos chequeos adicionales."

#: ../../checks-development.rst:88
msgid ""
"Checks should run as fast as possible or fail quickly. As checks run "
"sequentially if one check lasts 10 seconds to complete, then subsecuent "
"checks will begin executing after 10 seconds."
msgstr ""
"Los chequeos deben ejecutarse lo más rápido posible o fallar rápidamente. "
"Como los chequeos se ejecutan de forma secuencial si un chequeo tarda 10 "
"segundos en completarse, entonces los chequeos subsiguientes comenzarán a "
"ejecutarse luego de 10 segundos."

#: ../../checks-development.rst:92
msgid ""
"Always fail fast if the resource you're checking is not available for any "
"reason. For example if you're checking the status of your favourite SQL "
"engine and for whatever reason is not running or does not allow you to get "
"its status, then return an ERROR status explaining the reason and don't keep"
" retrying to get its status over and over again."
msgstr ""
"Siempre en caso de error falla rápidamente si el recurso que estas "
"verificando no esta disponible por cualquier razón. Por ejemplo, si estas "
"verificando el estado de tu motor SQL favorito y por alguna razón no se "
"encuentra corriendo o no te permite obtener su estado, entonces devuelve un "
"estado ERROR explicando la razón por la cual ha fallado y no reintentes "
"obtener su estado una y otra vez."

#: ../../checks-development.rst:98
msgid ""
"Checks should be platform independent. It is nice to just write a check once"
" and then have it running on as many platforms as possible. This promotes "
"reusability."
msgstr ""
"Los chequeos deberían ser independientes de la plataforma. Esta bueno "
"escribir una única vez un chequeo y luego tenerlo disponible en la mayor "
"cantidad de plataformas posible. Esto promueve su reusabilidad."

#: ../../checks-development.rst:102
msgid ""
"Test your checks ! You're encouraged to write unit tests on all of your "
"checks. This way you make sure that checks behave and fail as expected."
msgstr ""
"¡Escribe tests sobre tus chequeos! Te recomiendo que escribas tests "
"unitarios en tus chequeos. De esta manera te aseguras de que los mismos se "
"comportan de la manera en que tu esperas que lo hagan."

#: ../../checks-development.rst:142
msgid "Examples"
msgstr "Ejemplos"

#: ../../checks-development.rst:144
msgid ""
"If you're looking for some real examples you can take a look at this  "
"`repository <https://github.com/lliendo/Radar-Checks>`_. In there you'll "
"will find some basic but useful checks (written in Python) that allows you "
"to monitor :"
msgstr ""
"Si estas buscando algunos ejemplos concretos, puedes echar un vistazo al "
"siguiente `repositorio <https://github.com/lliendo/Radar-Checks>`_. Ahí "
"encontrarás algunos chequeos básicos (escritos en Python) que te permitirán "
"monitorear :"

#: ../../checks-development.rst:148
msgid "Disk usage."
msgstr "Utilización de disco."

#: ../../checks-development.rst:149
msgid "Ram usage."
msgstr "Utilización de memoria."

#: ../../checks-development.rst:150
msgid "Uptime."
msgstr "Tiempo de encendido."

#: ../../checks-development.rst:151
msgid "Process status."
msgstr "Estado de proceso."

#: ../../checks-development.rst:153
msgid ""
"They have been designed to run on as many platforms as possible. They rely "
"on the excellent `psutil <https://github.com/giampaolo/psutil>`_ module."
msgstr ""
"Fueron diseñados para correr en tantas plataformas como sea posible. Se "
"basan en el excelente módulo `psutil "
"<https://github.com/giampaolo/psutil>`_."

#: ../../checks-development.rst:107
msgid "Language interpreted checks"
msgstr "Chequeos utilizando lenguajes interpretdos"

#: ../../checks-development.rst:109
msgid ""
"If you're on Unix systems and you're planning to use any interpreted "
"programming language for check development keep in mind NOT to use the env "
"program as `shebang <https://en.wikipedia.org/wiki/Shebang_%28Unix%29>`_, "
"for example if you were going develop a `Ruby "
"<https://en.wikipedia.org/wiki/Ruby_%28programming_language%29>`_ script, "
"don't use :"
msgstr ""
"Si te encuentras en un sistema Unix y estas planeado utilizar algún lenguaje de "
"programación interpretado ten en cuenta de NO utilizar el programa env como `shebang <https://en.wikipedia.org/wiki/Shebang_%28Unix%29>`_, "
"por ejemplo si fueras a desarrollar un script en `Ruby <https://en.wikipedia.org/wiki/Ruby_%28programming_language%29>`_, no utilices : "

#: ../../checks-development.rst:118
msgid ""
"If you do so, when Radar spawns the script it will end up as a defunct "
"process. This is because the env program is fired initially (which in turn "
"should call the Ruby interpreter). Always use a shebang that points directly"
" to the interpreter that you want to use :"
msgstr ""
"Si lo haces, cuando Radar lance el script el mismo terminará como un proceso defunct. "
"Esto se debe a que el programa env es invocado (que a su vez debería invocar al "
"intérprete de Ruby). Siempre utiliza un shebang que apunte directamente al intérprete "
"que deseas utilizar : "

#: ../../checks-development.rst:128
msgid ""
"On Unix systems the exact path to the interpreter that you want to use can "
"be retrieved using the 'whereis' command. For example to get the full path "
"to the Ruby interpreter you would issue :"
msgstr ""
"En los sistemas Unix el path exácto al intérprete que quieres utilizar lo puedes "
"obtener utilizando el comando 'whereis'. Por ejemplo, para obtener el path absoluto "
"al intérprete de Ruby puedes ejecutar : "

#: ../../checks-development.rst:137
msgid ""
"The above explained only applies to Unix environments. Also remember to turn"
" on the execution bits if using a shebang."
msgstr ""
"Todo lo explicado anteriormente solo es válido en sistemas Unix. También recuerda "
"habilitar los bits de ejecución si utilizas un script con shebang. "
